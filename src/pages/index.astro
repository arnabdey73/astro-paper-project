---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Socials from "@/components/Socials.astro";
import LinkButton from "@/components/LinkButton.astro";
import Card from "@/components/Card.astro";
import Hr from "@/components/Hr.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import IconRss from "@/assets/icons/IconRss.svg";
import IconArrowRight from "@/assets/icons/IconArrowRight.svg";
import { SITE } from "@/config";

const posts = await getCollection("blog");

const sortedPosts = getSortedPosts(posts);

// Get the target blog IDs we want to feature and filter them
const featuredPostIdSuffixes = [
  "iac-azure-core-governance-enterprise-scale-automation-platform",
  "iac-module-library-azure-accelerate-cloud-journey",
  "openstack-devops-suite-comprehensive-automation-platform"
];

// Filter and manually sort the posts in the specific order
const featuredPosts = featuredPostIdSuffixes
  .map(targetId => posts.find(post => post.id.endsWith(targetId)))
  .filter(Boolean) as Array<typeof posts[0]>; // Filter out any undefined values just in case

// Filter out featured posts from the recent posts list
const recentPosts = sortedPosts.filter(post => 
  !featuredPosts.some(fp => fp && fp.id === post.id)
);
---

<Layout>
  <Header />
  <main id="main-content" data-layout="index">
    <section id="hero">
      <div class="hero-image mb-6">
        <img
          src="/assets/images/hero_Tech_Blog.png"
          alt="Tech Blog Hero"
          width="720" 
          height="360"
          class="post-banner mx-auto shadow-md"
          loading="eager"
        />
      </div>      <h1>Hej! üëã</h1>
      <a
        href="/rss.xml"
        class="rss-link"
        aria-label="rss feed"
        title="RSS Feed"
      >
        <IconRss class="rss-icon" />
      </a>

      <p>This is Arnab Dey! üë®‚Äçüíª</p>

      <p>
        I'm a DevOps/Cloud Engineer with 14+ years in IT, specializing in Azure, Python automation, and infrastructure as code. 
        This blog is where I share my experiences, projects, and insights about cloud infrastructure, DevOps practices, and automation techniques.
      </p>
      <p class="mt-2">
        Currently working on open-source DevOps tools and Azure automation projects. For more about my work and projects, visit my <a href="https://arnabdey.dev" class="text-accent hover:underline" target="_blank" rel="noopener noreferrer">portfolio</a>. Check out my latest articles below!
      </p>
      
      <div class="social-wrapper">
        <div class="social-links">Find me on:</div>
        <Socials />
      </div>

      <div class="flex flex-col sm:flex-row sm:gap-4">
        <LinkButton
          href="https://github.com/arnabdey73"
          class="link-button"
          title="View my GitHub projects"
        >
          View my projects
          <IconArrowRight class="h-6 w-6" />
        </LinkButton>
        <LinkButton
          href="https://arnabdey.dev"
          class="link-button"
          title="Visit my portfolio website"
        >
          Visit my portfolio
          <IconArrowRight class="h-6 w-6" />
        </LinkButton>
      </div>
    </section>

    <Hr />    {
      featuredPosts.length > 0 && (
        <section id="featured">
          <h2>Featured Posts</h2>
          <ul>            {featuredPosts.map(post => <Card {...post} variant="h2" />)}
          </ul>
        </section>
      )
    }

    <div class="read-more-divider mx-auto max-w-3xl px-4">
      <div class="relative flex items-center justify-center my-12">
        <div class="absolute inset-0 flex items-center" aria-hidden="true">
          <div class="w-full border-t border-dashed" style="border-color: var(--color-border);"></div>
        </div>
        <div class="relative flex justify-center bg-background px-6" style="background-color: var(--color-bg);">
          <svg 
            width="200" 
            height="40" 
            viewBox="0 0 200 40" 
            xmlns="http://www.w3.org/2000/svg"
            class="read-more-svg"
          >
            <defs>
              <linearGradient id="textGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                <stop offset="0%" style="stop-color: var(--color-accent); stop-opacity: 0.8" />
                <stop offset="50%" style="stop-color: var(--color-accent); stop-opacity: 1" />
                <stop offset="100%" style="stop-color: var(--color-accent); stop-opacity: 0.8" />
              </linearGradient>
            </defs>
            
            <!-- Decorative dots -->
            <circle cx="20" cy="20" r="2" fill="var(--color-accent)" opacity="0.6">
              <animate attributeName="opacity" values="0.6;1;0.6" dur="2s" repeatCount="indefinite" />
            </circle>
            <circle cx="30" cy="20" r="1.5" fill="var(--color-accent)" opacity="0.4">
              <animate attributeName="opacity" values="0.4;0.8;0.4" dur="2s" begin="0.3s" repeatCount="indefinite" />
            </circle>
            <circle cx="38" cy="20" r="1" fill="var(--color-accent)" opacity="0.3">
              <animate attributeName="opacity" values="0.3;0.6;0.3" dur="2s" begin="0.6s" repeatCount="indefinite" />
            </circle>
            
            <!-- Main text -->
            <text x="100" y="25" text-anchor="middle" font-family="ui-monospace, monospace" font-size="14" font-weight="600" fill="url(#textGradient)">
              Recent Posts
            </text>
            
            <!-- Decorative dots (right side) -->
            <circle cx="162" cy="20" r="1" fill="var(--color-accent)" opacity="0.3">
              <animate attributeName="opacity" values="0.3;0.6;0.3" dur="2s" begin="0.6s" repeatCount="indefinite" />
            </circle>
            <circle cx="170" cy="20" r="1.5" fill="var(--color-accent)" opacity="0.4">
              <animate attributeName="opacity" values="0.4;0.8;0.4" dur="2s" begin="0.3s" repeatCount="indefinite" />
            </circle>
            <circle cx="180" cy="20" r="2" fill="var(--color-accent)" opacity="0.6">
              <animate attributeName="opacity" values="0.6;1;0.6" dur="2s" repeatCount="indefinite" />
            </circle>
          </svg>
        </div>
      </div>
    </div>

    {
      recentPosts.length > 0 && (
        <section id="recent-posts">
          <h2>Recent Posts</h2>
          <ul>
            {recentPosts
              .slice(0, SITE.postPerIndex)
              .map(post => <Card {...post} variant="h2" />)
            }
          </ul>
        </section>
      )
    }

    <div class="all-posts-btn-wrapper">
      <LinkButton href="/posts" class="link-button">
        All Posts
        <IconArrowRight class="h-6 w-6" />
      </LinkButton>
    </div>
  </main>

  <Footer />
</Layout>

<style>
  /* ===== Hero Section ===== */
  #hero {
    @apply pb-6 pt-8;
  }
  #hero h1 {
    @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply mt-4 mb-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mr-2 mb-1 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts {
    @apply pb-6 pt-12;
  }
  #featured h2,
  #recent-posts h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
  }
  
  /* ===== Read More Divider ===== */
  .read-more-divider {
    @apply mb-8;
  }
  .read-more-svg {
    filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
  }
  .read-more-svg:hover {
    transform: scale(1.02);
    transition: transform 0.2s ease-in-out;
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const indexLayout = (document.querySelector("#main-content") as HTMLElement)
      ?.dataset?.layout;
    if (indexLayout) {
      sessionStorage.setItem("backUrl", "/");
    }
  });
</script>
