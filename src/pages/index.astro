---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Socials from "@/components/Socials.astro";
import LinkButton from "@/components/LinkButton.astro";
import Card from "@/components/Card.astro";
import Hr from "@/components/Hr.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import { SITE } from "@/config";

const posts = await getCollection("blog");

const sortedPosts = getSortedPosts(posts);

// Get the target blog IDs we want to feature and filter them
const featuredPostIdSuffixes = [
  "iac-azure-core-governance-enterprise-scale-automation-platform",
  "iac-module-library-azure-accelerate-cloud-journey",
  "openstack-devops-suite-comprehensive-automation-platform"
];

// Filter and manually sort the posts in the specific order
const featuredPosts = featuredPostIdSuffixes
  .map(targetId => posts.find(post => post.id.endsWith(targetId)))
  .filter(Boolean) as Array<typeof posts[0]>; // Filter out any undefined values just in case

// Filter out featured posts from the recent posts list
const recentPosts = sortedPosts.filter(post => 
  !featuredPosts.some(fp => fp && fp.id === post.id)
);
---

<Layout>
  <Header />
  <main id="main-content" data-layout="index">
    <section id="hero">
      <div class="hero-image">
        <div class="hero-banner overflow-hidden">
          <svg width="100%" height="100%" viewBox="0 0 1200 280" xmlns="http://www.w3.org/2000/svg" class="hero-svg" preserveAspectRatio="xMidYMid slice">
            <defs>
              <!-- Modern Background Gradient -->
              <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" stop-color="#0f172a" />
                <stop offset="50%" stop-color="#1e293b" />
                <stop offset="100%" stop-color="#334155" />
              </linearGradient>

              <!-- Accent Gradient -->
              <linearGradient id="accentGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                <stop offset="0%" stop-color="#3b82f6" />
                <stop offset="50%" stop-color="#6366f1" />
                <stop offset="100%" stop-color="#8b5cf6" />
              </linearGradient>

              <!-- Subtle Mesh Pattern -->
              <pattern id="meshPattern" width="120" height="120" patternUnits="userSpaceOnUse">
                <circle cx="60" cy="60" r="2" fill="#3b82f6" opacity="0.1"/>
                <circle cx="20" cy="20" r="1" fill="#6366f1" opacity="0.08"/>
                <circle cx="100" cy="100" r="1" fill="#8b5cf6" opacity="0.08"/>
                <path d="M0 60 H120 M60 0 V120" stroke="#3b82f6" stroke-width="0.3" opacity="0.05"/>
              </pattern>

              <!-- Glow Effect -->
              <filter id="glow" x="-50%" y="-50%" width="200%" height="200%">
                <feGaussianBlur stdDeviation="1.5" result="blur" />
                <feComposite in="SourceGraphic" in2="blur" operator="over" />
              </filter>

              <!-- Soft Shadow -->
              <filter id="softShadow" x="-20%" y="-20%" width="140%" height="140%">
                <feDropShadow dx="0" dy="2" stdDeviation="3" flood-color="#000" flood-opacity="0.15"/>
              </filter>
            </defs>
            
            <!-- Background -->
            <rect width="100%" height="100%" fill="url(#bgGradient)"/>
            
            <!-- Mesh Pattern -->
            <rect width="100%" height="100%" fill="url(#meshPattern)" opacity="0.6"/>
            
            <!-- Central Focus Area -->
            <g transform="translate(600, 140)">
              <!-- Main Content Container -->
              <rect x="-400" y="-70" width="800" height="140" rx="16" 
                    fill="rgba(15, 23, 42, 0.85)" 
                    stroke="url(#accentGradient)" 
                    stroke-width="1" 
                    filter="url(#softShadow)"/>
              
              <!-- Blog Title -->
              <text x="0" y="-25" text-anchor="middle" 
                    font-family="ui-monospace, monospace" 
                    font-size="32" 
                    font-weight="800" 
                    fill="#f8fafc"
                    filter="url(#glow)">DevOps Engineering Blog</text>
              
              <!-- Technology Stack -->
              <text x="0" y="15" text-anchor="middle" 
                    font-family="ui-monospace, monospace" 
                    font-size="14" 
                    font-weight="500" 
                    fill="#94a3b8">Azure • Python • Infrastructure as Code • Automation</text>
              
              <!-- Decorative Elements -->
              <g class="decorative-elements">
                <!-- Left side icons -->
                <g transform="translate(-320, 0)">
                  <!-- Cloud Icon -->
                  <circle cx="0" cy="-20" r="16" fill="rgba(59, 130, 246, 0.2)" stroke="#3b82f6" stroke-width="1.5" opacity="0.8"/>
                  <path d="M-8 -24 C-8 -28 -4 -31 0 -31 C4 -31 8 -28 8 -24 C12 -24 12 -16 8 -16 L-8 -16 C-12 -16 -12 -24 -8 -24 Z" 
                        fill="#3b82f6" opacity="0.9"/>
                  
                  <!-- Code Icon -->
                  <circle cx="0" cy="20" r="16" fill="rgba(99, 102, 241, 0.2)" stroke="#6366f1" stroke-width="1.5" opacity="0.8"/>
                  <path d="M-6 16 L-12 20 L-6 24 M6 16 L12 20 L6 24" stroke="#6366f1" stroke-width="2" fill="none" opacity="0.9"/>
                </g>
                
                <!-- Right side icons -->
                <g transform="translate(320, 0)">
                  <!-- Infrastructure Icon -->
                  <circle cx="0" cy="-20" r="16" fill="rgba(139, 92, 246, 0.2)" stroke="#8b5cf6" stroke-width="1.5" opacity="0.8"/>
                  <rect x="-7" y="-24" width="14" height="3" rx="1.5" fill="#8b5cf6" opacity="0.9"/>
                  <rect x="-5" y="-20" width="10" height="3" rx="1.5" fill="#8b5cf6" opacity="0.7"/>
                  <rect x="-3" y="-16" width="6" height="3" rx="1.5" fill="#8b5cf6" opacity="0.5"/>
                  
                  <!-- Automation Icon -->
                  <circle cx="0" cy="20" r="16" fill="rgba(34, 197, 94, 0.2)" stroke="#22c55e" stroke-width="1.5" opacity="0.8"/>
                  <path d="M-4 20 L0 16 L4 20 L0 24 Z" fill="#22c55e" opacity="0.9"/>
                  <circle cx="0" cy="20" r="3" fill="none" stroke="#22c55e" stroke-width="1.5" opacity="0.7"/>
                </g>
              </g>
            </g>
            
            <!-- Floating Tech Badges -->
            <g class="tech-badges" opacity="0.8">
              <!-- Azure Badge -->
              <g transform="translate(120, 60)">
                <rect x="-35" y="-12" width="70" height="24" rx="12" 
                      fill="rgba(59, 130, 246, 0.15)" 
                      stroke="#3b82f6" 
                      stroke-width="1.5"/>
                <text x="0" y="4" text-anchor="middle" 
                      font-family="ui-monospace, monospace" 
                      font-size="11" 
                      font-weight="700" 
                      fill="#3b82f6">AZURE</text>
              </g>
              
              <!-- Python Badge -->
              <g transform="translate(1080, 60)">
                <rect x="-40" y="-12" width="80" height="24" rx="12" 
                      fill="rgba(99, 102, 241, 0.15)" 
                      stroke="#6366f1" 
                      stroke-width="1.5"/>
                <text x="0" y="4" text-anchor="middle" 
                      font-family="ui-monospace, monospace" 
                      font-size="11" 
                      font-weight="700" 
                      fill="#6366f1">PYTHON</text>
              </g>
              
              <!-- DevOps Badge -->
              <g transform="translate(120, 220)">
                <rect x="-40" y="-12" width="80" height="24" rx="12" 
                      fill="rgba(139, 92, 246, 0.15)" 
                      stroke="#8b5cf6" 
                      stroke-width="1.5"/>
                <text x="0" y="4" text-anchor="middle" 
                      font-family="ui-monospace, monospace" 
                      font-size="11" 
                      font-weight="700" 
                      fill="#8b5cf6">DEVOPS</text>
              </g>
              
              <!-- IaC Badge -->
              <g transform="translate(1080, 220)">
                <rect x="-30" y="-12" width="60" height="24" rx="12" 
                      fill="rgba(34, 197, 94, 0.15)" 
                      stroke="#22c55e" 
                      stroke-width="1.5"/>
                <text x="0" y="4" text-anchor="middle" 
                      font-family="ui-monospace, monospace" 
                      font-size="11" 
                      font-weight="700" 
                      fill="#22c55e">IaC</text>
              </g>
            </g>
            
            <!-- Animated Connection Lines -->
            <g class="connections" opacity="0.5">
              <!-- From center to badges -->
              <path d="M200 140 L155 72" stroke="url(#accentGradient)" stroke-width="1.5" stroke-dasharray="4,3">
                <animate attributeName="stroke-dashoffset" values="0;7" dur="3s" repeatCount="indefinite" />
              </path>
              <path d="M1000 140 L1045 72" stroke="url(#accentGradient)" stroke-width="1.5" stroke-dasharray="4,3">
                <animate attributeName="stroke-dashoffset" values="0;7" dur="3s" repeatCount="indefinite" begin="0.5s"/>
              </path>
              <path d="M200 140 L155 208" stroke="url(#accentGradient)" stroke-width="1.5" stroke-dasharray="4,3">
                <animate attributeName="stroke-dashoffset" values="0;7" dur="3s" repeatCount="indefinite" begin="1s"/>
              </path>
              <path d="M1000 140 L1045 208" stroke="url(#accentGradient)" stroke-width="1.5" stroke-dasharray="4,3">
                <animate attributeName="stroke-dashoffset" values="0;7" dur="3s" repeatCount="indefinite" begin="1.5s"/>
              </path>
            </g>
            
            <!-- Subtle Ambient Particles -->
            <g class="ambient-particles" opacity="0.4">
              <circle cx="80" cy="40" r="2" fill="#3b82f6">
                <animate attributeName="opacity" values="0.4;0.9;0.4" dur="4s" repeatCount="indefinite" />
                <animateTransform attributeName="transform" type="translate" values="0,0; 0,-6; 0,0" dur="6s" repeatCount="indefinite"/>
              </circle>
              <circle cx="1120" cy="240" r="2" fill="#6366f1">
                <animate attributeName="opacity" values="0.4;0.9;0.4" dur="4s" repeatCount="indefinite" begin="1s"/>
                <animateTransform attributeName="transform" type="translate" values="0,0; 0,-6; 0,0" dur="6s" repeatCount="indefinite" begin="1s"/>
              </circle>
              <circle cx="250" cy="25" r="1.5" fill="#8b5cf6">
                <animate attributeName="opacity" values="0.4;0.9;0.4" dur="4s" repeatCount="indefinite" begin="2s"/>
                <animateTransform attributeName="transform" type="translate" values="0,0; 0,-4; 0,0" dur="5s" repeatCount="indefinite" begin="2s"/>
              </circle>
              <circle cx="950" cy="255" r="1.5" fill="#22c55e">
                <animate attributeName="opacity" values="0.4;0.9;0.4" dur="4s" repeatCount="indefinite" begin="3s"/>
                <animateTransform attributeName="transform" type="translate" values="0,0; 0,-4; 0,0" dur="5s" repeatCount="indefinite" begin="3s"/>
              </circle>
              <!-- Additional particles for more atmosphere -->
              <circle cx="400" cy="50" r="1" fill="#3b82f6" opacity="0.3">
                <animate attributeName="opacity" values="0.3;0.7;0.3" dur="5s" repeatCount="indefinite" begin="1.5s"/>
                <animateTransform attributeName="transform" type="translate" values="0,0; 0,-3; 0,0" dur="7s" repeatCount="indefinite" begin="1.5s"/>
              </circle>
              <circle cx="800" cy="230" r="1" fill="#8b5cf6" opacity="0.3">
                <animate attributeName="opacity" values="0.3;0.7;0.3" dur="5s" repeatCount="indefinite" begin="2.5s"/>
                <animateTransform attributeName="transform" type="translate" values="0,0; 0,-3; 0,0" dur="7s" repeatCount="indefinite" begin="2.5s"/>
              </circle>
            </g>
          </svg>
        </div>
      </div>
      
      <div class="hero-content">
        <h1>Hej! 👋</h1>
        <a
          href="/rss.xml"
          class="rss-link"
          aria-label="rss feed"
          title="RSS Feed"
        >
          <svg class="rss-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M5 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
            <path d="M4 4a16 16 0 0 1 16 16" />
            <path d="M4 11a9 9 0 0 1 9 9" />
          </svg>
        </a>

        <p>This is Arnab Dey! 👨‍💻</p>

        <p>
          I'm a DevOps/Cloud Engineer with 14+ years in IT, specializing in Azure, Python automation, and infrastructure as code. 
          This blog is where I share my experiences, projects, and insights about cloud infrastructure, DevOps practices, and automation techniques.
        </p>
        <p class="mt-2">
          Currently working on open-source DevOps tools and Azure automation projects. For more about my work and projects, visit my <a href="https://arnabdey.dev" class="text-accent hover:underline" target="_blank" rel="noopener noreferrer">portfolio</a>. Check out my latest articles below!
        </p>
        
        <div class="social-wrapper">
          <div class="social-links">Find me on:</div>
          <Socials />
        </div>

        <div class="flex flex-col sm:flex-row sm:gap-4">
          <LinkButton
            href="https://github.com/arnabdey73"
            class="link-button"
            title="View my GitHub projects"
          >
            View my projects
            <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
              <path d="M5 12l14 0" />
              <path d="M13 18l6 -6" />
              <path d="M13 6l6 6" />
            </svg>
          </LinkButton>
          <LinkButton
            href="https://arnabdey.dev"
            class="link-button"
            title="Visit my portfolio website"
          >
            Visit my portfolio
            <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
              <path d="M5 12l14 0" />
              <path d="M13 18l6 -6" />
              <path d="M13 6l6 6" />
            </svg>
          </LinkButton>
        </div>
      </div>
    </section>

    <Hr />    {
      featuredPosts.length > 0 && (
        <section id="featured">
          <h2>Featured Posts</h2>
          <ul>            {featuredPosts.map(post => <Card {...post} variant="h2" />)}
          </ul>
        </section>
      )
    }

    <div class="read-more-divider mx-auto w-full">
      <div class="relative flex items-center justify-center my-16">
        <!-- Background pattern -->
        <div class="absolute inset-0 flex items-center justify-center" aria-hidden="true">
          <svg width="100%" height="60" viewBox="0 0 800 60" class="opacity-20">
            <defs>
              <pattern id="grid" width="40" height="40" patternUnits="userSpaceOnUse">
                <circle cx="20" cy="20" r="0.5" fill="var(--color-accent)" opacity="0.3"/>
              </pattern>
            </defs>
            <rect width="100%" height="100%" fill="url(#grid)" />
            <line x1="0" y1="30" x2="800" y2="30" stroke="var(--color-border)" stroke-width="1" stroke-dasharray="8,4" opacity="0.5"/>
          </svg>
        </div>
        
        <!-- Main content -->
        <div class="relative flex items-center justify-center bg-background rounded-full px-8 py-4 shadow-sm border" 
             style="background-color: var(--color-bg); border-color: var(--color-border);">
          <div class="flex items-center space-x-4">
            <!-- Left icon -->
            <div class="read-more-icon">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M12 2L2 7V17L12 22L22 17V7L12 2Z" stroke="var(--color-accent)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M12 22V12" stroke="var(--color-accent)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M2 7L12 12L22 7" stroke="var(--color-accent)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
            
            <!-- Text -->
            <div class="text-center">
              <div class="text-sm font-medium uppercase tracking-wider text-muted mb-1" style="color: var(--color-text-base); opacity: 0.7;">
                Continue Reading
              </div>
              <div class="text-lg font-bold" style="color: var(--color-accent);">
                Recent Posts
              </div>
            </div>
            
            <!-- Right icon -->
            <div class="read-more-icon">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M12 2L2 7V17L12 22L22 17V7L12 2Z" stroke="var(--color-accent)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M12 22V12" stroke="var(--color-accent)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M2 7L12 12L22 7" stroke="var(--color-accent)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
          </div>
          
          <!-- Subtle glow effect -->
          <div class="absolute inset-0 rounded-full bg-gradient-to-r from-transparent via-accent/5 to-transparent"></div>
        </div>
        
        <!-- Floating particles -->
        <div class="absolute inset-0 pointer-events-none">
          <div class="floating-particle" style="left: 20%; top: 30%; animation-delay: 0s;"></div>
          <div class="floating-particle" style="left: 80%; top: 70%; animation-delay: 1s;"></div>
          <div class="floating-particle" style="left: 70%; top: 20%; animation-delay: 2s;"></div>
        </div>
      </div>
    </div>

    {
      recentPosts.length > 0 && (
        <section id="recent-posts">
          <h2>Recent Posts</h2>
          <ul>
            {recentPosts
              .slice(0, SITE.postPerIndex)
              .map(post => <Card {...post} variant="h2" />)
            }
          </ul>
        </section>
      )
    }

    <div class="all-posts-btn-wrapper">
      <LinkButton href="/posts" class="link-button">
        All Posts
        <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
          <path d="M5 12l14 0" />
          <path d="M13 18l6 -6" />
          <path d="M13 6l6 6" />
        </svg>
      </LinkButton>
    </div>
  </main>

  <Footer />
</Layout>

<style>
  /* ===== Full-width Layout Override ===== */
  #main-content[data-layout="index"] {
    max-width: none !important;
    padding-left: 2rem !important;
    padding-right: 2rem !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
    width: 100% !important;
  }

  @media (max-width: 640px) {
    #main-content[data-layout="index"] {
      padding-left: 1rem !important;
      padding-right: 1rem !important;
    }
  }

  @media (min-width: 1200px) {
    #main-content[data-layout="index"] {
      padding-left: 3rem !important;
      padding-right: 3rem !important;
    }
  }
  
  /* ===== Hero Section ===== */
  #hero {
    @apply pb-6 pt-8;
    max-width: 1400px;
    margin: 0 auto;
    position: relative;
    overflow-x: hidden;
  }
  
  #hero .hero-content {
    @apply mt-12;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
    position: relative;
    z-index: 10;
    padding-top: 2rem;
  }
  
  #hero h1 {
    @apply my-4 inline-block text-3xl font-bold sm:my-8 sm:text-5xl;
  }
  
  #hero .rss-link {
    @apply mb-6;
  }
  
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  
  #hero p {
    @apply my-2;
  }
  
  /* ===== Hero Banner Full Width ===== */
  .hero-image {
    @apply mb-12 w-full;
    width: 100%;
    position: relative;
    overflow-x: hidden;
    margin-bottom: 3rem;
  }
  
  .hero-banner {
    @apply transition-all duration-500 w-full;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
    border: 1px solid var(--color-border);
    border-radius: 0.75rem;
    min-height: 250px;
    box-shadow: 0 4px 12px -2px rgba(0, 0, 0, 0.1), 0 2px 6px -1px rgba(0, 0, 0, 0.05);
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
  
  .hero-banner:hover {
    box-shadow: 0 8px 20px -4px rgba(0, 0, 0, 0.15), 0 4px 10px -2px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }
  
  .hero-svg {
    @apply w-full h-full;
    min-height: 250px;
    display: block;
    max-width: 1400px;
    transition: all 0.3s ease-in-out;
  }
  
  /* Responsive hero adjustments */
  @media (max-width: 640px) {
    .hero-banner {
      min-height: 240px;
      border-radius: 0.5rem;
    }
    .hero-svg {
      min-height: 240px;
    }
    
    /* Hide corner badges on mobile for cleaner look */
    .tech-badges {
      display: none;
    }
    
    /* Adjust text sizes and spacing for mobile */
    .hero-svg text[font-size="32"] {
      font-size: 18px;
    }
    .hero-svg text[font-size="14"] {
      font-size: 9px;
    }
    
    /* Adjust container size for mobile */
    .hero-svg rect[width="800"] {
      width: 340px;
      x: -170px;
    }
    
    /* Adjust decorative elements position for mobile */
    .decorative-elements g[transform*="-320"] {
      transform: translate(-180, 0);
    }
    .decorative-elements g[transform*="320"] {
      transform: translate(180, 0);
    }
  }
  
  @media (min-width: 641px) and (max-width: 768px) {
    .hero-banner {
      min-height: 280px;
      border-radius: 0.75rem;
    }
    .hero-svg {
      min-height: 280px;
    }
    
    /* Slightly smaller text on tablets */
    .hero-svg text[font-size="32"] {
      font-size: 24px;
    }
    .hero-svg text[font-size="14"] {
      font-size: 11px;
    }
    
    /* Adjust container for tablets */
    .hero-svg rect[width="800"] {
      width: 600px;
      x: -300px;
    }
    
    /* Adjust decorative elements for tablets */
    .decorative-elements g[transform*="-320"] {
      transform: translate(-250, 0);
    }
    .decorative-elements g[transform*="320"] {
      transform: translate(250, 0);
    }
  }
  
  @media (min-width: 769px) {
    .hero-banner {
      min-height: 300px;
      border-radius: 1rem;
    }
    .hero-svg {
      min-height: 300px;
    }
  }
  
  @media (min-width: 1024px) {
    .hero-banner {
      min-height: 320px;
      border-radius: 1.25rem;
    }
    .hero-svg {
      min-height: 320px;
    }
  }
  
  .social-wrapper {
    @apply mt-4 mb-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mr-2 mb-1 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts {
    @apply pb-6 pt-12;
    max-width: 1400px;
    margin: 0 auto;
  }
  
  #featured ul,
  #recent-posts ul {
    @apply grid gap-6;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }
  
  @media (min-width: 1024px) {
    #featured ul,
    #recent-posts ul {
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    }
  }
  
  @media (min-width: 1400px) {
    #featured ul,
    #recent-posts ul {
      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    }
  }
  
  #featured h2,
  #recent-posts h2 {
    @apply text-3xl font-black tracking-wide mb-8 relative;
    color: var(--color-text-base);
    background: linear-gradient(135deg, var(--color-text-base) 0%, var(--color-accent) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    font-weight: 900;
  }
  
  #featured h2::after,
  #recent-posts h2::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 0;
    width: 60px;
    height: 4px;
    background: linear-gradient(90deg, var(--color-accent) 0%, transparent 100%);
    border-radius: 2px;
  }
  
  #featured h2:hover,
  #recent-posts h2:hover {
    transform: translateX(4px);
    transition: transform 0.2s ease-in-out;
  }
  
  #featured h2:hover::after,
  #recent-posts h2:hover::after {
    width: 80px;
    transition: width 0.2s ease-in-out;
  }
  
  .all-posts-btn-wrapper {
    @apply my-8 text-center px-4 sm:px-6 lg:px-8;
    max-width: 1400px;
    margin-left: auto;
    margin-right: auto;
  }
  
  /* ===== Read More Divider ===== */
  .read-more-divider {
    @apply mb-12 px-4 sm:px-6 lg:px-8;
    max-width: 1400px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .read-more-icon {
    @apply flex-shrink-0;
    animation: gentle-pulse 3s ease-in-out infinite;
  }
  
  .floating-particle {
    @apply absolute w-1 h-1 rounded-full;
    background-color: var(--color-accent);
    opacity: 0.3;
    animation: float 4s ease-in-out infinite;
  }
  
  @keyframes gentle-pulse {
    0%, 100% { 
      transform: scale(1);
      opacity: 0.8;
    }
    50% { 
      transform: scale(1.05);
      opacity: 1;
    }
  }
  
  @keyframes float {
    0%, 100% { 
      transform: translateY(0px);
      opacity: 0.3;
    }
    50% { 
      transform: translateY(-8px);
      opacity: 0.6;
    }
  }
  
  .read-more-divider:hover .read-more-icon {
    animation-duration: 1.5s;
  }
  
  .read-more-divider:hover .floating-particle {
    animation-duration: 2s;
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const indexLayout = (document.querySelector("#main-content") as HTMLElement)
      ?.dataset?.layout;
    if (indexLayout) {
      sessionStorage.setItem("backUrl", "/");
    }
  });
</script>
