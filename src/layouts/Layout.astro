---
import { ClientRouter } from "astro:transitions";
import { SITE } from "@/config";
import BackToTop from "@/components/BackToTop.astro";
import "@/styles/global.css";

const googleSiteVerification = import.meta.env.PUBLIC_GOOGLE_SITE_VERIFICATION;

export interface Props {
  title?: string;
  author?: string;
  profile?: string;
  description?: string;
  ogImage?: string;
  canonicalURL?: string;
  pubDatetime?: Date;
  modDatetime?: Date | null;
  scrollSmooth?: boolean;
}

const {
  title = SITE.title,
  author = SITE.author,
  profile = SITE.profile,
  description = SITE.desc,
  ogImage = SITE.ogImage ? `/${SITE.ogImage}` : "/og.png",
  canonicalURL = (() => {
    try {
      return new URL(Astro.url.pathname, Astro.url).toString();
    } catch (e) {
      console.warn("Error creating canonicalURL. Using pathname directly.", e);
      return Astro.url.pathname;
    }
  })(),
  pubDatetime,
  modDatetime,
  scrollSmooth = false,
} = Astro.props;

const socialImageURL = (() => {
  try {
    // If ogImage is already a full URL, use it directly
    if (ogImage.startsWith('http://') || ogImage.startsWith('https://')) {
      return ogImage;
    }
    // Otherwise, resolve against Astro.url
    return new URL(ogImage, Astro.url).toString();
  } catch (e) {
    console.warn("Error creating socialImageURL. Using ogImage directly.", e);
    return ogImage;
  }
})();

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: `${title}`,
  image: `${socialImageURL}`,
  datePublished: `${pubDatetime?.toISOString()}`,
  ...(modDatetime && { dateModified: modDatetime.toISOString() }),
  author: [
    {
      "@type": "Person",
      name: `${author}`,
      ...(profile && { url: profile }),
    },
  ],
};
---

<!doctype html>
<html lang=`${SITE.lang ?? "en"}` class={`${scrollSmooth && "scroll-smooth"}`}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/assets/images/favicon.ico" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />

    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />

    <!-- Article Published/Modified time -->
    {
      pubDatetime && (
        <meta
          property="article:published_time"
          content={pubDatetime.toISOString()}
        />
      )
    }
    {
      modDatetime && (
        <meta
          property="article:modified_time"
          content={modDatetime.toISOString()}
        />
      )
    }

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <!-- Google JSON-LD Structured data -->
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify(structuredData)}
    />

    <!-- Enable RSS feed auto-discovery  -->
    <!-- https://docs.astro.build/en/recipes/rss/#enabling-rss-feed-auto-discovery -->
    <link
      rel="alternate"
      type="application/rss+xml"
      title={SITE.title}
      href="/rss.xml"
    />

    <meta name="theme-color" content="" />

    {
      // If PUBLIC_GOOGLE_SITE_VERIFICATION is set in the environment variable,
      // include google-site-verification tag in the heading
      // Learn more: https://support.google.com/webmasters/answer/9008080#meta_tag_verification&zippy=%2Chtml-tag
      googleSiteVerification && (
        <meta
          name="google-site-verification"
          content={googleSiteVerification}
        />
      )
    }

    <ClientRouter />

    <script is:inline src="/toggle-theme.js"></script>
  </head>
  <body class="flex flex-col min-h-screen">
    <div class="flex-grow">
      <slot />
    </div>
    <BackToTop />
  </body>
</html>

<style is:global>
  html,
  body {
    margin: 0;
    width: 100%;
    min-height: 100%;
    overflow-x: hidden;
  }
  
  /* Force all content to be full-width */
  .prose, 
  .prose-full,
  #article,
  #about,
  main,
  section,
  article {
    width: 100% !important;
    max-width: none !important;
    box-sizing: border-box !important;
  }
  
  /* Setup for fixed footer layout */
  body {
    display: flex;
    flex-direction: column;
  }
  
  body > div.flex-grow {
    display: flex;
    flex-direction: column;
    min-height: 0;
  }

  /* Ensure posts and about page text is properly aligned */
  #article p,
  #about p {
    width: 100% !important;
    text-align: left !important;
    max-width: none !important;
  }
  
  /* Override any default Tailwind width constraints */
  @media (min-width: 640px) {
    .prose, .prose-full {
      max-width: none !important;
    }
  }
</style>
